"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
even-valued terms.
"""
from euler_utils import timeit

__author__ = 'Darryl'


def fib_sum_iter(maxnum):
    one_behind = 1
    current = 2
    total = list()
    while current < maxnum:
        if (current % 2) == 0:
            total.append(current)
        two_behind = one_behind
        one_behind = current
        current = two_behind + one_behind
    print(sum(total))


def fib_sum_recur(maxnum, nums=list(), current=2, previous=1):
    if current < maxnum:
        if not current % 2:
            nums.append(current)
        fib_sum_recur(maxnum, nums, current + previous, current)
    else:
        print(sum(nums))


@timeit
def main():
    fib_sum_iter(4000000)


@timeit
def main2():
    fib_sum_recur(4000000)


if __name__ == '__main__':
    main()
    main2()